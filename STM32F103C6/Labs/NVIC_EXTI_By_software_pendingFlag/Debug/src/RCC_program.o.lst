   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"RCC_program.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RCC_voidInitSysClock,"ax",%progbits
  16              		.align	1
  17              		.global	RCC_voidInitSysClock
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RCC_voidInitSysClock:
  24              	.LFB0:
  25              		.file 1 "../src/RCC_program.c"
   1:../src/RCC_program.c **** /**********************************************************************/
   2:../src/RCC_program.c **** /* Author       : OsamaMahmoud                                        */
   3:../src/RCC_program.c **** /* Version      : V01                                                 */
   4:../src/RCC_program.c **** /* Date         : 8 August 2020                                       */
   5:../src/RCC_program.c **** /**********************************************************************/
   6:../src/RCC_program.c **** 
   7:../src/RCC_program.c **** #include "STD_TYPES.h"
   8:../src/RCC_program.c **** #include "BIT_MATH.h"
   9:../src/RCC_program.c **** 
  10:../src/RCC_program.c **** #include "RCC_interface.h"
  11:../src/RCC_program.c **** #include "RCC_private.h"
  12:../src/RCC_program.c **** #include "RCC_config.h"
  13:../src/RCC_program.c **** 
  14:../src/RCC_program.c **** void RCC_voidInitSysClock(void)
  15:../src/RCC_program.c **** {
  26              		.loc 1 15 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  16:../src/RCC_program.c ****   #if     RCC_CLOCK_TYPE == RCC_HSI
  17:../src/RCC_program.c ****       RCC_CR   = 0x00000081;  /*Enable HSI + Trimming = 0 */
  18:../src/RCC_program.c ****       RCC_CFGR = 0x00000000;
  19:../src/RCC_program.c ****   
  20:../src/RCC_program.c ****   #elif   RCC_CLOCK_TYPE == RCC_HSE_CRYSTAL
  21:../src/RCC_program.c ****       RCC_CR   = 0x00010000;  /* Enable HSE With NO bypass */
  31              		.loc 1 21 0
  32 0000 034B     		ldr	r3, .L2
  33 0002 4FF48032 		mov	r2, #65536
  34 0006 1A60     		str	r2, [r3]
  22:../src/RCC_program.c ****       RCC_CFGR = 0x00000001;
  35              		.loc 1 22 0
  36 0008 0433     		adds	r3, r3, #4
  37 000a 0122     		movs	r2, #1
  38 000c 1A60     		str	r2, [r3]
  23:../src/RCC_program.c ****   
  24:../src/RCC_program.c ****   #elif   RCC_CLOCK_TYPE == RCC_HSE_RC
  25:../src/RCC_program.c ****       RCC_CR   = 0x00050000;  /* Enable HSE With bypass */
  26:../src/RCC_program.c **** 	  RCC_CFGR = 0x00000001;
  27:../src/RCC_program.c **** 	 
  28:../src/RCC_program.c ****   #elif   RCC_CLOCK_TYPE == RCC_PLL
  29:../src/RCC_program.c ****   
  30:../src/RCC_program.c ****   RCC_CFGR |= (RCC_PLL_MUL_VAL <<18);
  31:../src/RCC_program.c ****   
  32:../src/RCC_program.c ****       #if   RCC_PLL_INPUT == RCC_PLL_IN_HSI_DIV_2 
  33:../src/RCC_program.c ****    
  34:../src/RCC_program.c **** 		
  35:../src/RCC_program.c **** 		CLR_BIT(RCC_CFGR, 16);  /* Enable HSI Clock /2 */
  36:../src/RCC_program.c **** 		SET_BIT(RCC_CR  ,  0);  /* Enable HSI */ 
  37:../src/RCC_program.c **** 		CLR_BIT(RCC_CFGR,  0);  
  38:../src/RCC_program.c **** 		SET_BIT(RCC_CFGR,  1);  /* Select_PLL   */
  39:../src/RCC_program.c **** 		SET_BIT(RCC_CR  , 24);  /* Enable PLL */
  40:../src/RCC_program.c **** 	   
  41:../src/RCC_program.c **** 	  #elif RCC_PLL_INPUT == RCC_PLL_IN_HSE_DIV_2
  42:../src/RCC_program.c **** 	  
  43:../src/RCC_program.c **** 		SET_BIT(RCC_CFGR, 17);
  44:../src/RCC_program.c **** 		SET_BIT(RCC_CR  , 16);
  45:../src/RCC_program.c **** 		CLR_BIT(RCC_CFGR,  0); 
  46:../src/RCC_program.c **** 		SET_BIT(RCC_CFGR,  1);    /*Select_PLL */
  47:../src/RCC_program.c **** 		SET_BIT(RCC_CR  , 24);
  48:../src/RCC_program.c **** 		
  49:../src/RCC_program.c **** 	  
  50:../src/RCC_program.c **** 	  #elif RCC_PLL_INPUT == RCC_PLL_IN_HSE
  51:../src/RCC_program.c **** 	  
  52:../src/RCC_program.c **** 		SET_BIT(RCC_CFGR, 16);
  53:../src/RCC_program.c **** 		SET_BIT(RCC_CR  , 16);
  54:../src/RCC_program.c **** 		CLR_BIT(RCC_CFGR,  0); 
  55:../src/RCC_program.c **** 		SET_BIT(RCC_CFGR,  1);   /*Select_PLL  */
  56:../src/RCC_program.c **** 		SET_BIT(RCC_CR  , 24);
  57:../src/RCC_program.c **** 	 
  58:../src/RCC_program.c **** 	  #endif
  59:../src/RCC_program.c **** 	  
  60:../src/RCC_program.c ****        
  61:../src/RCC_program.c ****   #else
  62:../src/RCC_program.c ****       #error("You chosed Wrong Clock type")
  63:../src/RCC_program.c ****   #endif  
  64:../src/RCC_program.c **** }
  39              		.loc 1 64 0
  40 000e 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0010 00100240 		.word	1073876992
  45              		.cfi_endproc
  46              	.LFE0:
  48              		.section	.text.RCC_voidEnableClock,"ax",%progbits
  49              		.align	1
  50              		.global	RCC_voidEnableClock
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu softvfp
  56              	RCC_voidEnableClock:
  57              	.LFB1:
  65:../src/RCC_program.c **** void RCC_voidEnableClock(u8 Copy_u8BusId, u8 Copy_u8PerId)
  66:../src/RCC_program.c **** {
  58              		.loc 1 66 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL0:
  67:../src/RCC_program.c ****       if(Copy_u8PerId<=31)
  64              		.loc 1 67 0
  65 0000 1F29     		cmp	r1, #31
  66 0002 1CD8     		bhi	.L4
  68:../src/RCC_program.c **** 	  {
  69:../src/RCC_program.c **** 	     switch(Copy_u8BusId)
  67              		.loc 1 69 0
  68 0004 0128     		cmp	r0, #1
  69 0006 0BD0     		beq	.L6
  70 0008 10B1     		cbz	r0, .L7
  71 000a 0228     		cmp	r0, #2
  72 000c 10D0     		beq	.L8
  73 000e 7047     		bx	lr
  74              	.L7:
  70:../src/RCC_program.c **** 		 {
  71:../src/RCC_program.c **** 		   case RCC_AHP  :
  72:../src/RCC_program.c **** 		   SET_BIT(RCC_AHBENR  ,Copy_u8PerId);
  75              		.loc 1 72 0
  76 0010 0123     		movs	r3, #1
  77 0012 03FA01F1 		lsl	r1, r3, r1
  78              	.LVL1:
  79 0016 0A4A     		ldr	r2, .L9
  80 0018 1368     		ldr	r3, [r2]
  81 001a 0B43     		orrs	r3, r3, r1
  82 001c 1360     		str	r3, [r2]
  73:../src/RCC_program.c **** 		   break;
  83              		.loc 1 73 0
  84 001e 7047     		bx	lr
  85              	.LVL2:
  86              	.L6:
  74:../src/RCC_program.c **** 		   case RCC_APB1 :
  75:../src/RCC_program.c **** 		   SET_BIT(RCC_APB1ENR ,Copy_u8PerId);
  87              		.loc 1 75 0
  88 0020 0123     		movs	r3, #1
  89 0022 03FA01F1 		lsl	r1, r3, r1
  90              	.LVL3:
  91 0026 074A     		ldr	r2, .L9+4
  92 0028 1368     		ldr	r3, [r2]
  93 002a 0B43     		orrs	r3, r3, r1
  94 002c 1360     		str	r3, [r2]
  76:../src/RCC_program.c **** 		   break;
  95              		.loc 1 76 0
  96 002e 7047     		bx	lr
  97              	.LVL4:
  98              	.L8:
  77:../src/RCC_program.c **** 		   case RCC_APB2 :
  78:../src/RCC_program.c **** 		   SET_BIT(RCC_APB2ENR ,Copy_u8PerId);
  99              		.loc 1 78 0
 100 0030 0123     		movs	r3, #1
 101 0032 03FA01F1 		lsl	r1, r3, r1
 102              	.LVL5:
 103 0036 044A     		ldr	r2, .L9+8
 104 0038 1368     		ldr	r3, [r2]
 105 003a 0B43     		orrs	r3, r3, r1
 106 003c 1360     		str	r3, [r2]
 107              	.L4:
  79:../src/RCC_program.c **** 		   break;
  80:../src/RCC_program.c **** 		   //default       : /* Return Error */                break;
  81:../src/RCC_program.c **** 		 }
  82:../src/RCC_program.c **** 	  }
  83:../src/RCC_program.c **** 	  else
  84:../src/RCC_program.c **** 	  {
  85:../src/RCC_program.c **** 	     /* Return Error */
  86:../src/RCC_program.c **** 	  }
  87:../src/RCC_program.c **** }
 108              		.loc 1 87 0
 109 003e 7047     		bx	lr
 110              	.L10:
 111              		.align	2
 112              	.L9:
 113 0040 14100240 		.word	1073877012
 114 0044 1C100240 		.word	1073877020
 115 0048 18100240 		.word	1073877016
 116              		.cfi_endproc
 117              	.LFE1:
 119              		.section	.text.RCC_voidDisableClock,"ax",%progbits
 120              		.align	1
 121              		.global	RCC_voidDisableClock
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	RCC_voidDisableClock:
 128              	.LFB2:
  88:../src/RCC_program.c **** 
  89:../src/RCC_program.c **** void RCC_voidDisableClock(u8 Copy_u8BusId, u8 Copy_u8PerId)
  90:../src/RCC_program.c **** {
 129              		.loc 1 90 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL6:
  91:../src/RCC_program.c ****       if(Copy_u8PerId<=31)
 135              		.loc 1 91 0
 136 0000 1F29     		cmp	r1, #31
 137 0002 1FD8     		bhi	.L11
  92:../src/RCC_program.c **** 	  {
  93:../src/RCC_program.c **** 	     switch(Copy_u8BusId)
 138              		.loc 1 93 0
 139 0004 0128     		cmp	r0, #1
 140 0006 0CD0     		beq	.L13
 141 0008 10B1     		cbz	r0, .L14
 142 000a 0228     		cmp	r0, #2
 143 000c 12D0     		beq	.L15
 144 000e 7047     		bx	lr
 145              	.L14:
  94:../src/RCC_program.c **** 		 {
  95:../src/RCC_program.c **** 		   case RCC_AHP  :
  96:../src/RCC_program.c **** 		   CLR_BIT(RCC_AHBENR  ,Copy_u8PerId);
 146              		.loc 1 96 0
 147 0010 0123     		movs	r3, #1
 148 0012 03FA01F1 		lsl	r1, r3, r1
 149              	.LVL7:
 150 0016 0C4A     		ldr	r2, .L16
 151 0018 1368     		ldr	r3, [r2]
 152 001a 23EA0103 		bic	r3, r3, r1
 153 001e 1360     		str	r3, [r2]
  97:../src/RCC_program.c **** 		   break;
 154              		.loc 1 97 0
 155 0020 7047     		bx	lr
 156              	.LVL8:
 157              	.L13:
  98:../src/RCC_program.c **** 		   case RCC_APB1 :
  99:../src/RCC_program.c **** 		   CLR_BIT(RCC_APB1ENR ,Copy_u8PerId);
 158              		.loc 1 99 0
 159 0022 0123     		movs	r3, #1
 160 0024 03FA01F1 		lsl	r1, r3, r1
 161              	.LVL9:
 162 0028 084A     		ldr	r2, .L16+4
 163 002a 1368     		ldr	r3, [r2]
 164 002c 23EA0103 		bic	r3, r3, r1
 165 0030 1360     		str	r3, [r2]
 100:../src/RCC_program.c **** 		   break;
 166              		.loc 1 100 0
 167 0032 7047     		bx	lr
 168              	.LVL10:
 169              	.L15:
 101:../src/RCC_program.c **** 		   case RCC_APB2 :
 102:../src/RCC_program.c **** 		   CLR_BIT(RCC_APB2ENR ,Copy_u8PerId);
 170              		.loc 1 102 0
 171 0034 0123     		movs	r3, #1
 172 0036 03FA01F1 		lsl	r1, r3, r1
 173              	.LVL11:
 174 003a 054A     		ldr	r2, .L16+8
 175 003c 1368     		ldr	r3, [r2]
 176 003e 23EA0103 		bic	r3, r3, r1
 177 0042 1360     		str	r3, [r2]
 178              	.L11:
 103:../src/RCC_program.c **** 		   break;
 104:../src/RCC_program.c **** 		   //default     : /* Return Error */                  break;
 105:../src/RCC_program.c **** 		 }
 106:../src/RCC_program.c **** 	  }
 107:../src/RCC_program.c **** 	  else
 108:../src/RCC_program.c **** 	  {
 109:../src/RCC_program.c **** 	     /* Return Error */
 110:../src/RCC_program.c **** 	  }
 111:../src/RCC_program.c **** }
 179              		.loc 1 111 0
 180 0044 7047     		bx	lr
 181              	.L17:
 182 0046 00BF     		.align	2
 183              	.L16:
 184 0048 14100240 		.word	1073877012
 185 004c 1C100240 		.word	1073877020
 186 0050 18100240 		.word	1073877016
 187              		.cfi_endproc
 188              	.LFE2:
 190              		.text
 191              	.Letext0:
 192              		.file 2 "../include/STD_TYPES.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RCC_program.c
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:16     .text.RCC_voidInitSysClock:00000000 $t
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:23     .text.RCC_voidInitSysClock:00000000 RCC_voidInitSysClock
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:44     .text.RCC_voidInitSysClock:00000010 $d
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:49     .text.RCC_voidEnableClock:00000000 $t
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:56     .text.RCC_voidEnableClock:00000000 RCC_voidEnableClock
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:113    .text.RCC_voidEnableClock:00000040 $d
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:120    .text.RCC_voidDisableClock:00000000 $t
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:127    .text.RCC_voidDisableClock:00000000 RCC_voidDisableClock
C:\Users\asss5\AppData\Local\Temp\ccCpqwrD.s:184    .text.RCC_voidDisableClock:00000048 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.BIT_MATH.h.7.9e202d561dbc646358aac71c4817ca6a
                           .group:00000000 wm4.RCC_interface.h.7.dd4c1e985d1dd4cee7385a59411ce2b0
                           .group:00000000 wm4.RCC_private.h.7.c24182505c127058a422166be7743a84
                           .group:00000000 wm4.RCC_config.h.7.73ab50847f9aa751959871647353d999

NO UNDEFINED SYMBOLS
